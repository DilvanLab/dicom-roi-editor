(ns cljs-react-material-ui.icons
  (:require-macros [cljs-react-material-ui.icons :as mi])
  (:require [cljs-react-material-ui.core :as m]
            [cljsjs.material-ui-svg-icons]))

(def ^:private create-mui-icon (partial m/create-mui-cmp js/MaterialUISvgIcons))


(defn action-accessibility [& args] (create-mui-icon "ActionAccessibility" args))
(defn action-accessible [& args] (create-mui-icon "ActionAccessible" args))
(defn action-account-balance-wallet [& args] (create-mui-icon "ActionAccountBalanceWallet" args))
(defn action-account-balance [& args] (create-mui-icon "ActionAccountBalance" args))
(defn action-account-box [& args] (create-mui-icon "ActionAccountBox" args))
(defn action-account-circle [& args] (create-mui-icon "ActionAccountCircle" args))
(defn action-add-shopping-cart [& args] (create-mui-icon "ActionAddShoppingCart" args))
(defn action-alarm-add [& args] (create-mui-icon "ActionAlarmAdd" args))
(defn action-alarm-off [& args] (create-mui-icon "ActionAlarmOff" args))
(defn action-alarm-on [& args] (create-mui-icon "ActionAlarmOn" args))
(defn action-alarm [& args] (create-mui-icon "ActionAlarm" args))
(defn action-all-out [& args] (create-mui-icon "ActionAllOut" args))
(defn action-android [& args] (create-mui-icon "ActionAndroid" args))
(defn action-announcement [& args] (create-mui-icon "ActionAnnouncement" args))
(defn action-aspect-ratio [& args] (create-mui-icon "ActionAspectRatio" args))
(defn action-assessment [& args] (create-mui-icon "ActionAssessment" args))
(defn action-assignment-ind [& args] (create-mui-icon "ActionAssignmentInd" args))
(defn action-assignment-late [& args] (create-mui-icon "ActionAssignmentLate" args))
(defn action-assignment-return [& args] (create-mui-icon "ActionAssignmentReturn" args))
(defn action-assignment-returned [& args] (create-mui-icon "ActionAssignmentReturned" args))
(defn action-assignment-turned-in [& args] (create-mui-icon "ActionAssignmentTurnedIn" args))
(defn action-assignment [& args] (create-mui-icon "ActionAssignment" args))
(defn action-autorenew [& args] (create-mui-icon "ActionAutorenew" args))
(defn action-backup [& args] (create-mui-icon "ActionBackup" args))
(defn action-book [& args] (create-mui-icon "ActionBook" args))
(defn action-bookmark-border [& args] (create-mui-icon "ActionBookmarkBorder" args))
(defn action-bookmark [& args] (create-mui-icon "ActionBookmark" args))
(defn action-bug-report [& args] (create-mui-icon "ActionBugReport" args))
(defn action-build [& args] (create-mui-icon "ActionBuild" args))
(defn action-cached [& args] (create-mui-icon "ActionCached" args))
(defn action-camera-enhance [& args] (create-mui-icon "ActionCameraEnhance" args))
(defn action-card-giftcard [& args] (create-mui-icon "ActionCardGiftcard" args))
(defn action-card-membership [& args] (create-mui-icon "ActionCardMembership" args))
(defn action-card-travel [& args] (create-mui-icon "ActionCardTravel" args))
(defn action-change-history [& args] (create-mui-icon "ActionChangeHistory" args))
(defn action-check-circle [& args] (create-mui-icon "ActionCheckCircle" args))
(defn action-chrome-reader-mode [& args] (create-mui-icon "ActionChromeReaderMode" args))
(defn action-class [& args] (create-mui-icon "ActionClass" args))
(defn action-code [& args] (create-mui-icon "ActionCode" args))
(defn action-compare-arrows [& args] (create-mui-icon "ActionCompareArrows" args))
(defn action-copyright [& args] (create-mui-icon "ActionCopyright" args))
(defn action-credit-card [& args] (create-mui-icon "ActionCreditCard" args))
(defn action-dashboard [& args] (create-mui-icon "ActionDashboard" args))
(defn action-date-range [& args] (create-mui-icon "ActionDateRange" args))
(defn action-delete-forever [& args] (create-mui-icon "ActionDeleteForever" args))
(defn action-delete [& args] (create-mui-icon "ActionDelete" args))
(defn action-description [& args] (create-mui-icon "ActionDescription" args))
(defn action-dns [& args] (create-mui-icon "ActionDns" args))
(defn action-done-all [& args] (create-mui-icon "ActionDoneAll" args))
(defn action-done [& args] (create-mui-icon "ActionDone" args))
(defn action-donut-large [& args] (create-mui-icon "ActionDonutLarge" args))
(defn action-donut-small [& args] (create-mui-icon "ActionDonutSmall" args))
(defn action-eject [& args] (create-mui-icon "ActionEject" args))
(defn action-euro-symbol [& args] (create-mui-icon "ActionEuroSymbol" args))
(defn action-event-seat [& args] (create-mui-icon "ActionEventSeat" args))
(defn action-event [& args] (create-mui-icon "ActionEvent" args))
(defn action-exit-to-app [& args] (create-mui-icon "ActionExitToApp" args))
(defn action-explore [& args] (create-mui-icon "ActionExplore" args))
(defn action-extension [& args] (create-mui-icon "ActionExtension" args))
(defn action-face [& args] (create-mui-icon "ActionFace" args))
(defn action-favorite-border [& args] (create-mui-icon "ActionFavoriteBorder" args))
(defn action-favorite [& args] (create-mui-icon "ActionFavorite" args))
(defn action-feedback [& args] (create-mui-icon "ActionFeedback" args))
(defn action-find-in-page [& args] (create-mui-icon "ActionFindInPage" args))
(defn action-find-replace [& args] (create-mui-icon "ActionFindReplace" args))
(defn action-fingerprint [& args] (create-mui-icon "ActionFingerprint" args))
(defn action-flight-land [& args] (create-mui-icon "ActionFlightLand" args))
(defn action-flight-takeoff [& args] (create-mui-icon "ActionFlightTakeoff" args))
(defn action-flip-to-back [& args] (create-mui-icon "ActionFlipToBack" args))
(defn action-flip-to-front [& args] (create-mui-icon "ActionFlipToFront" args))
(defn action-g-translate [& args] (create-mui-icon "ActionGTranslate" args))
(defn action-gavel [& args] (create-mui-icon "ActionGavel" args))
(defn action-get-app [& args] (create-mui-icon "ActionGetApp" args))
(defn action-gif [& args] (create-mui-icon "ActionGif" args))
(defn action-grade [& args] (create-mui-icon "ActionGrade" args))
(defn action-group-work [& args] (create-mui-icon "ActionGroupWork" args))
(defn action-help-outline [& args] (create-mui-icon "ActionHelpOutline" args))
(defn action-help [& args] (create-mui-icon "ActionHelp" args))
(defn action-highlight-off [& args] (create-mui-icon "ActionHighlightOff" args))
(defn action-history [& args] (create-mui-icon "ActionHistory" args))
(defn action-home [& args] (create-mui-icon "ActionHome" args))
(defn action-hourglass-empty [& args] (create-mui-icon "ActionHourglassEmpty" args))
(defn action-hourglass-full [& args] (create-mui-icon "ActionHourglassFull" args))
(defn action-http [& args] (create-mui-icon "ActionHttp" args))
(defn action-https [& args] (create-mui-icon "ActionHttps" args))
(defn action-important-devices [& args] (create-mui-icon "ActionImportantDevices" args))
(defn action-info-outline [& args] (create-mui-icon "ActionInfoOutline" args))
(defn action-info [& args] (create-mui-icon "ActionInfo" args))
(defn action-input [& args] (create-mui-icon "ActionInput" args))
(defn action-invert-colors [& args] (create-mui-icon "ActionInvertColors" args))
(defn action-label-outline [& args] (create-mui-icon "ActionLabelOutline" args))
(defn action-label [& args] (create-mui-icon "ActionLabel" args))
(defn action-language [& args] (create-mui-icon "ActionLanguage" args))
(defn action-launch [& args] (create-mui-icon "ActionLaunch" args))
(defn action-lightbulb-outline [& args] (create-mui-icon "ActionLightbulbOutline" args))
(defn action-line-style [& args] (create-mui-icon "ActionLineStyle" args))
(defn action-line-weight [& args] (create-mui-icon "ActionLineWeight" args))
(defn action-list [& args] (create-mui-icon "ActionList" args))
(defn action-lock-open [& args] (create-mui-icon "ActionLockOpen" args))
(defn action-lock-outline [& args] (create-mui-icon "ActionLockOutline" args))
(defn action-lock [& args] (create-mui-icon "ActionLock" args))
(defn action-loyalty [& args] (create-mui-icon "ActionLoyalty" args))
(defn action-markunread-mailbox [& args] (create-mui-icon "ActionMarkunreadMailbox" args))
(defn action-motorcycle [& args] (create-mui-icon "ActionMotorcycle" args))
(defn action-note-add [& args] (create-mui-icon "ActionNoteAdd" args))
(defn action-offline-pin [& args] (create-mui-icon "ActionOfflinePin" args))
(defn action-opacity [& args] (create-mui-icon "ActionOpacity" args))
(defn action-open-in-browser [& args] (create-mui-icon "ActionOpenInBrowser" args))
(defn action-open-in-new [& args] (create-mui-icon "ActionOpenInNew" args))
(defn action-open-with [& args] (create-mui-icon "ActionOpenWith" args))
(defn action-pageview [& args] (create-mui-icon "ActionPageview" args))
(defn action-pan-tool [& args] (create-mui-icon "ActionPanTool" args))
(defn action-payment [& args] (create-mui-icon "ActionPayment" args))
(defn action-perm-camera-mic [& args] (create-mui-icon "ActionPermCameraMic" args))
(defn action-perm-contact-calendar [& args] (create-mui-icon "ActionPermContactCalendar" args))
(defn action-perm-data-setting [& args] (create-mui-icon "ActionPermDataSetting" args))
(defn action-perm-device-information [& args] (create-mui-icon "ActionPermDeviceInformation" args))
(defn action-perm-identity [& args] (create-mui-icon "ActionPermIdentity" args))
(defn action-perm-media [& args] (create-mui-icon "ActionPermMedia" args))
(defn action-perm-phone-msg [& args] (create-mui-icon "ActionPermPhoneMsg" args))
(defn action-perm-scan-wifi [& args] (create-mui-icon "ActionPermScanWifi" args))
(defn action-pets [& args] (create-mui-icon "ActionPets" args))
(defn action-picture-in-picture-alt [& args] (create-mui-icon "ActionPictureInPictureAlt" args))
(defn action-picture-in-picture [& args] (create-mui-icon "ActionPictureInPicture" args))
(defn action-play-for-work [& args] (create-mui-icon "ActionPlayForWork" args))
(defn action-polymer [& args] (create-mui-icon "ActionPolymer" args))
(defn action-power-settings-new [& args] (create-mui-icon "ActionPowerSettingsNew" args))
(defn action-pregnant-woman [& args] (create-mui-icon "ActionPregnantWoman" args))
(defn action-print [& args] (create-mui-icon "ActionPrint" args))
(defn action-query-builder [& args] (create-mui-icon "ActionQueryBuilder" args))
(defn action-question-answer [& args] (create-mui-icon "ActionQuestionAnswer" args))
(defn action-receipt [& args] (create-mui-icon "ActionReceipt" args))
(defn action-record-voice-over [& args] (create-mui-icon "ActionRecordVoiceOver" args))
(defn action-redeem [& args] (create-mui-icon "ActionRedeem" args))
(defn action-remove-shopping-cart [& args] (create-mui-icon "ActionRemoveShoppingCart" args))
(defn action-reorder [& args] (create-mui-icon "ActionReorder" args))
(defn action-report-problem [& args] (create-mui-icon "ActionReportProblem" args))
(defn action-restore-page [& args] (create-mui-icon "ActionRestorePage" args))
(defn action-restore [& args] (create-mui-icon "ActionRestore" args))
(defn action-room [& args] (create-mui-icon "ActionRoom" args))
(defn action-rounded-corner [& args] (create-mui-icon "ActionRoundedCorner" args))
(defn action-rowing [& args] (create-mui-icon "ActionRowing" args))
(defn action-schedule [& args] (create-mui-icon "ActionSchedule" args))
(defn action-search [& args] (create-mui-icon "ActionSearch" args))
(defn action-settings-applications [& args] (create-mui-icon "ActionSettingsApplications" args))
(defn action-settings-backup-restore [& args] (create-mui-icon "ActionSettingsBackupRestore" args))
(defn action-settings-bluetooth [& args] (create-mui-icon "ActionSettingsBluetooth" args))
(defn action-settings-brightness [& args] (create-mui-icon "ActionSettingsBrightness" args))
(defn action-settings-cell [& args] (create-mui-icon "ActionSettingsCell" args))
(defn action-settings-ethernet [& args] (create-mui-icon "ActionSettingsEthernet" args))
(defn action-settings-input-antenna [& args] (create-mui-icon "ActionSettingsInputAntenna" args))
(defn action-settings-input-component [& args] (create-mui-icon "ActionSettingsInputComponent" args))
(defn action-settings-input-composite [& args] (create-mui-icon "ActionSettingsInputComposite" args))
(defn action-settings-input-hdmi [& args] (create-mui-icon "ActionSettingsInputHdmi" args))
(defn action-settings-input-svideo [& args] (create-mui-icon "ActionSettingsInputSvideo" args))
(defn action-settings-overscan [& args] (create-mui-icon "ActionSettingsOverscan" args))
(defn action-settings-phone [& args] (create-mui-icon "ActionSettingsPhone" args))
(defn action-settings-power [& args] (create-mui-icon "ActionSettingsPower" args))
(defn action-settings-remote [& args] (create-mui-icon "ActionSettingsRemote" args))
(defn action-settings-voice [& args] (create-mui-icon "ActionSettingsVoice" args))
(defn action-settings [& args] (create-mui-icon "ActionSettings" args))
(defn action-shop-two [& args] (create-mui-icon "ActionShopTwo" args))
(defn action-shop [& args] (create-mui-icon "ActionShop" args))
(defn action-shopping-basket [& args] (create-mui-icon "ActionShoppingBasket" args))
(defn action-shopping-cart [& args] (create-mui-icon "ActionShoppingCart" args))
(defn action-speaker-notes-off [& args] (create-mui-icon "ActionSpeakerNotesOff" args))
(defn action-speaker-notes [& args] (create-mui-icon "ActionSpeakerNotes" args))
(defn action-spellcheck [& args] (create-mui-icon "ActionSpellcheck" args))
(defn action-stars [& args] (create-mui-icon "ActionStars" args))
(defn action-store [& args] (create-mui-icon "ActionStore" args))
(defn action-subject [& args] (create-mui-icon "ActionSubject" args))
(defn action-supervisor-account [& args] (create-mui-icon "ActionSupervisorAccount" args))
(defn action-swap-horiz [& args] (create-mui-icon "ActionSwapHoriz" args))
(defn action-swap-vert [& args] (create-mui-icon "ActionSwapVert" args))
(defn action-swap-vertical-circle [& args] (create-mui-icon "ActionSwapVerticalCircle" args))
(defn action-system-update-alt [& args] (create-mui-icon "ActionSystemUpdateAlt" args))
(defn action-tab-unselected [& args] (create-mui-icon "ActionTabUnselected" args))
(defn action-tab [& args] (create-mui-icon "ActionTab" args))
(defn action-theaters [& args] (create-mui-icon "ActionTheaters" args))
(defn action-three-d-rotation [& args] (create-mui-icon "ActionThreeDRotation" args))
(defn action-thumb-down [& args] (create-mui-icon "ActionThumbDown" args))
(defn action-thumb-up [& args] (create-mui-icon "ActionThumbUp" args))
(defn action-thumbs-up-down [& args] (create-mui-icon "ActionThumbsUpDown" args))
(defn action-timeline [& args] (create-mui-icon "ActionTimeline" args))
(defn action-toc [& args] (create-mui-icon "ActionToc" args))
(defn action-today [& args] (create-mui-icon "ActionToday" args))
(defn action-toll [& args] (create-mui-icon "ActionToll" args))
(defn action-touch-app [& args] (create-mui-icon "ActionTouchApp" args))
(defn action-track-changes [& args] (create-mui-icon "ActionTrackChanges" args))
(defn action-translate [& args] (create-mui-icon "ActionTranslate" args))
(defn action-trending-down [& args] (create-mui-icon "ActionTrendingDown" args))
(defn action-trending-flat [& args] (create-mui-icon "ActionTrendingFlat" args))
(defn action-trending-up [& args] (create-mui-icon "ActionTrendingUp" args))
(defn action-turned-in-not [& args] (create-mui-icon "ActionTurnedInNot" args))
(defn action-turned-in [& args] (create-mui-icon "ActionTurnedIn" args))
(defn action-update [& args] (create-mui-icon "ActionUpdate" args))
(defn action-verified-user [& args] (create-mui-icon "ActionVerifiedUser" args))
(defn action-view-agenda [& args] (create-mui-icon "ActionViewAgenda" args))
(defn action-view-array [& args] (create-mui-icon "ActionViewArray" args))
(defn action-view-carousel [& args] (create-mui-icon "ActionViewCarousel" args))
(defn action-view-column [& args] (create-mui-icon "ActionViewColumn" args))
(defn action-view-day [& args] (create-mui-icon "ActionViewDay" args))
(defn action-view-headline [& args] (create-mui-icon "ActionViewHeadline" args))
(defn action-view-list [& args] (create-mui-icon "ActionViewList" args))
(defn action-view-module [& args] (create-mui-icon "ActionViewModule" args))
(defn action-view-quilt [& args] (create-mui-icon "ActionViewQuilt" args))
(defn action-view-stream [& args] (create-mui-icon "ActionViewStream" args))
(defn action-view-week [& args] (create-mui-icon "ActionViewWeek" args))
(defn action-visibility-off [& args] (create-mui-icon "ActionVisibilityOff" args))
(defn action-visibility [& args] (create-mui-icon "ActionVisibility" args))
(defn action-watch-later [& args] (create-mui-icon "ActionWatchLater" args))
(defn action-work [& args] (create-mui-icon "ActionWork" args))
(defn action-youtube-searched-for [& args] (create-mui-icon "ActionYoutubeSearchedFor" args))
(defn action-zoom-in [& args] (create-mui-icon "ActionZoomIn" args))
(defn action-zoom-out [& args] (create-mui-icon "ActionZoomOut" args))
(defn alert-add-alert [& args] (create-mui-icon "AlertAddAlert" args))
(defn alert-error-outline [& args] (create-mui-icon "AlertErrorOutline" args))
(defn alert-error [& args] (create-mui-icon "AlertError" args))
(defn alert-warning [& args] (create-mui-icon "AlertWarning" args))
(defn av-add-to-queue [& args] (create-mui-icon "AvAddToQueue" args))
(defn av-airplay [& args] (create-mui-icon "AvAirplay" args))
(defn av-album [& args] (create-mui-icon "AvAlbum" args))
(defn av-art-track [& args] (create-mui-icon "AvArtTrack" args))
(defn av-av-timer [& args] (create-mui-icon "AvAvTimer" args))
(defn av-branding-watermark [& args] (create-mui-icon "AvBrandingWatermark" args))
(defn av-call-to-action [& args] (create-mui-icon "AvCallToAction" args))
(defn av-closed-caption [& args] (create-mui-icon "AvClosedCaption" args))
(defn av-equalizer [& args] (create-mui-icon "AvEqualizer" args))
(defn av-explicit [& args] (create-mui-icon "AvExplicit" args))
(defn av-fast-forward [& args] (create-mui-icon "AvFastForward" args))
(defn av-fast-rewind [& args] (create-mui-icon "AvFastRewind" args))
(defn av-featured-play-list [& args] (create-mui-icon "AvFeaturedPlayList" args))
(defn av-featured-video [& args] (create-mui-icon "AvFeaturedVideo" args))
(defn av-fiber-dvr [& args] (create-mui-icon "AvFiberDvr" args))
(defn av-fiber-manual-record [& args] (create-mui-icon "AvFiberManualRecord" args))
(defn av-fiber-new [& args] (create-mui-icon "AvFiberNew" args))
(defn av-fiber-pin [& args] (create-mui-icon "AvFiberPin" args))
(defn av-fiber-smart-record [& args] (create-mui-icon "AvFiberSmartRecord" args))
(defn av-forward-1-0 [& args] (create-mui-icon "AvForward10" args))
(defn av-forward-3-0 [& args] (create-mui-icon "AvForward30" args))
(defn av-forward-5 [& args] (create-mui-icon "AvForward5" args))
(defn av-games [& args] (create-mui-icon "AvGames" args))
(defn av-hd [& args] (create-mui-icon "AvHd" args))
(defn av-hearing [& args] (create-mui-icon "AvHearing" args))
(defn av-high-quality [& args] (create-mui-icon "AvHighQuality" args))
(defn av-library-add [& args] (create-mui-icon "AvLibraryAdd" args))
(defn av-library-books [& args] (create-mui-icon "AvLibraryBooks" args))
(defn av-library-music [& args] (create-mui-icon "AvLibraryMusic" args))
(defn av-loop [& args] (create-mui-icon "AvLoop" args))
(defn av-mic-none [& args] (create-mui-icon "AvMicNone" args))
(defn av-mic-off [& args] (create-mui-icon "AvMicOff" args))
(defn av-mic [& args] (create-mui-icon "AvMic" args))
(defn av-movie [& args] (create-mui-icon "AvMovie" args))
(defn av-music-video [& args] (create-mui-icon "AvMusicVideo" args))
(defn av-new-releases [& args] (create-mui-icon "AvNewReleases" args))
(defn av-not-interested [& args] (create-mui-icon "AvNotInterested" args))
(defn av-note [& args] (create-mui-icon "AvNote" args))
(defn av-pause-circle-filled [& args] (create-mui-icon "AvPauseCircleFilled" args))
(defn av-pause-circle-outline [& args] (create-mui-icon "AvPauseCircleOutline" args))
(defn av-pause [& args] (create-mui-icon "AvPause" args))
(defn av-play-arrow [& args] (create-mui-icon "AvPlayArrow" args))
(defn av-play-circle-filled [& args] (create-mui-icon "AvPlayCircleFilled" args))
(defn av-play-circle-outline [& args] (create-mui-icon "AvPlayCircleOutline" args))
(defn av-playlist-add-check [& args] (create-mui-icon "AvPlaylistAddCheck" args))
(defn av-playlist-add [& args] (create-mui-icon "AvPlaylistAdd" args))
(defn av-playlist-play [& args] (create-mui-icon "AvPlaylistPlay" args))
(defn av-queue-music [& args] (create-mui-icon "AvQueueMusic" args))
(defn av-queue-play-next [& args] (create-mui-icon "AvQueuePlayNext" args))
(defn av-queue [& args] (create-mui-icon "AvQueue" args))
(defn av-radio [& args] (create-mui-icon "AvRadio" args))
(defn av-recent-actors [& args] (create-mui-icon "AvRecentActors" args))
(defn av-remove-from-queue [& args] (create-mui-icon "AvRemoveFromQueue" args))
(defn av-repeat-one [& args] (create-mui-icon "AvRepeatOne" args))
(defn av-repeat [& args] (create-mui-icon "AvRepeat" args))
(defn av-replay-1-0 [& args] (create-mui-icon "AvReplay10" args))
(defn av-replay-3-0 [& args] (create-mui-icon "AvReplay30" args))
(defn av-replay-5 [& args] (create-mui-icon "AvReplay5" args))
(defn av-replay [& args] (create-mui-icon "AvReplay" args))
(defn av-shuffle [& args] (create-mui-icon "AvShuffle" args))
(defn av-skip-next [& args] (create-mui-icon "AvSkipNext" args))
(defn av-skip-previous [& args] (create-mui-icon "AvSkipPrevious" args))
(defn av-slow-motion-video [& args] (create-mui-icon "AvSlowMotionVideo" args))
(defn av-snooze [& args] (create-mui-icon "AvSnooze" args))
(defn av-sort-by-alpha [& args] (create-mui-icon "AvSortByAlpha" args))
(defn av-stop [& args] (create-mui-icon "AvStop" args))
(defn av-subscriptions [& args] (create-mui-icon "AvSubscriptions" args))
(defn av-subtitles [& args] (create-mui-icon "AvSubtitles" args))
(defn av-surround-sound [& args] (create-mui-icon "AvSurroundSound" args))
(defn av-video-call [& args] (create-mui-icon "AvVideoCall" args))
(defn av-video-label [& args] (create-mui-icon "AvVideoLabel" args))
(defn av-video-library [& args] (create-mui-icon "AvVideoLibrary" args))
(defn av-videocam-off [& args] (create-mui-icon "AvVideocamOff" args))
(defn av-videocam [& args] (create-mui-icon "AvVideocam" args))
(defn av-volume-down [& args] (create-mui-icon "AvVolumeDown" args))
(defn av-volume-mute [& args] (create-mui-icon "AvVolumeMute" args))
(defn av-volume-off [& args] (create-mui-icon "AvVolumeOff" args))
(defn av-volume-up [& args] (create-mui-icon "AvVolumeUp" args))
(defn av-web-asset [& args] (create-mui-icon "AvWebAsset" args))
(defn av-web [& args] (create-mui-icon "AvWeb" args))
(defn communication-business [& args] (create-mui-icon "CommunicationBusiness" args))
(defn communication-call-end [& args] (create-mui-icon "CommunicationCallEnd" args))
(defn communication-call-made [& args] (create-mui-icon "CommunicationCallMade" args))
(defn communication-call-merge [& args] (create-mui-icon "CommunicationCallMerge" args))
(defn communication-call-missed-outgoing [& args] (create-mui-icon "CommunicationCallMissedOutgoing" args))
(defn communication-call-missed [& args] (create-mui-icon "CommunicationCallMissed" args))
(defn communication-call-received [& args] (create-mui-icon "CommunicationCallReceived" args))
(defn communication-call-split [& args] (create-mui-icon "CommunicationCallSplit" args))
(defn communication-call [& args] (create-mui-icon "CommunicationCall" args))
(defn communication-chat-bubble-outline [& args] (create-mui-icon "CommunicationChatBubbleOutline" args))
(defn communication-chat-bubble [& args] (create-mui-icon "CommunicationChatBubble" args))
(defn communication-chat [& args] (create-mui-icon "CommunicationChat" args))
(defn communication-clear-all [& args] (create-mui-icon "CommunicationClearAll" args))
(defn communication-comment [& args] (create-mui-icon "CommunicationComment" args))
(defn communication-contact-mail [& args] (create-mui-icon "CommunicationContactMail" args))
(defn communication-contact-phone [& args] (create-mui-icon "CommunicationContactPhone" args))
(defn communication-contacts [& args] (create-mui-icon "CommunicationContacts" args))
(defn communication-dialer-sip [& args] (create-mui-icon "CommunicationDialerSip" args))
(defn communication-dialpad [& args] (create-mui-icon "CommunicationDialpad" args))
(defn communication-email [& args] (create-mui-icon "CommunicationEmail" args))
(defn communication-forum [& args] (create-mui-icon "CommunicationForum" args))
(defn communication-import-contacts [& args] (create-mui-icon "CommunicationImportContacts" args))
(defn communication-import-export [& args] (create-mui-icon "CommunicationImportExport" args))
(defn communication-invert-colors-off [& args] (create-mui-icon "CommunicationInvertColorsOff" args))
(defn communication-live-help [& args] (create-mui-icon "CommunicationLiveHelp" args))
(defn communication-location-off [& args] (create-mui-icon "CommunicationLocationOff" args))
(defn communication-location-on [& args] (create-mui-icon "CommunicationLocationOn" args))
(defn communication-mail-outline [& args] (create-mui-icon "CommunicationMailOutline" args))
(defn communication-message [& args] (create-mui-icon "CommunicationMessage" args))
(defn communication-no-sim [& args] (create-mui-icon "CommunicationNoSim" args))
(defn communication-phone [& args] (create-mui-icon "CommunicationPhone" args))
(defn communication-phonelink-erase [& args] (create-mui-icon "CommunicationPhonelinkErase" args))
(defn communication-phonelink-lock [& args] (create-mui-icon "CommunicationPhonelinkLock" args))
(defn communication-phonelink-ring [& args] (create-mui-icon "CommunicationPhonelinkRing" args))
(defn communication-phonelink-setup [& args] (create-mui-icon "CommunicationPhonelinkSetup" args))
(defn communication-portable-wifi-off [& args] (create-mui-icon "CommunicationPortableWifiOff" args))
(defn communication-present-to-all [& args] (create-mui-icon "CommunicationPresentToAll" args))
(defn communication-ring-volume [& args] (create-mui-icon "CommunicationRingVolume" args))
(defn communication-rss-feed [& args] (create-mui-icon "CommunicationRssFeed" args))
(defn communication-screen-share [& args] (create-mui-icon "CommunicationScreenShare" args))
(defn communication-speaker-phone [& args] (create-mui-icon "CommunicationSpeakerPhone" args))
(defn communication-stay-current-landscape [& args] (create-mui-icon "CommunicationStayCurrentLandscape" args))
(defn communication-stay-current-portrait [& args] (create-mui-icon "CommunicationStayCurrentPortrait" args))
(defn communication-stay-primary-landscape [& args] (create-mui-icon "CommunicationStayPrimaryLandscape" args))
(defn communication-stay-primary-portrait [& args] (create-mui-icon "CommunicationStayPrimaryPortrait" args))
(defn communication-stop-screen-share [& args] (create-mui-icon "CommunicationStopScreenShare" args))
(defn communication-swap-calls [& args] (create-mui-icon "CommunicationSwapCalls" args))
(defn communication-textsms [& args] (create-mui-icon "CommunicationTextsms" args))
(defn communication-voicemail [& args] (create-mui-icon "CommunicationVoicemail" args))
(defn communication-vpn-key [& args] (create-mui-icon "CommunicationVpnKey" args))
(defn content-add-box [& args] (create-mui-icon "ContentAddBox" args))
(defn content-add-circle-outline [& args] (create-mui-icon "ContentAddCircleOutline" args))
(defn content-add-circle [& args] (create-mui-icon "ContentAddCircle" args))
(defn content-add [& args] (create-mui-icon "ContentAdd" args))
(defn content-archive [& args] (create-mui-icon "ContentArchive" args))
(defn content-backspace [& args] (create-mui-icon "ContentBackspace" args))
(defn content-block [& args] (create-mui-icon "ContentBlock" args))
(defn content-clear [& args] (create-mui-icon "ContentClear" args))
(defn content-content-copy [& args] (create-mui-icon "ContentContentCopy" args))
(defn content-content-cut [& args] (create-mui-icon "ContentContentCut" args))
(defn content-content-paste [& args] (create-mui-icon "ContentContentPaste" args))
(defn content-create [& args] (create-mui-icon "ContentCreate" args))
(defn content-delete-sweep [& args] (create-mui-icon "ContentDeleteSweep" args))
(defn content-drafts [& args] (create-mui-icon "ContentDrafts" args))
(defn content-filter-list [& args] (create-mui-icon "ContentFilterList" args))
(defn content-flag [& args] (create-mui-icon "ContentFlag" args))
(defn content-font-download [& args] (create-mui-icon "ContentFontDownload" args))
(defn content-forward [& args] (create-mui-icon "ContentForward" args))
(defn content-gesture [& args] (create-mui-icon "ContentGesture" args))
(defn content-inbox [& args] (create-mui-icon "ContentInbox" args))
(defn content-link [& args] (create-mui-icon "ContentLink" args))
(defn content-low-priority [& args] (create-mui-icon "ContentLowPriority" args))
(defn content-mail [& args] (create-mui-icon "ContentMail" args))
(defn content-markunread [& args] (create-mui-icon "ContentMarkunread" args))
(defn content-move-to-inbox [& args] (create-mui-icon "ContentMoveToInbox" args))
(defn content-next-week [& args] (create-mui-icon "ContentNextWeek" args))
(defn content-redo [& args] (create-mui-icon "ContentRedo" args))
(defn content-remove-circle-outline [& args] (create-mui-icon "ContentRemoveCircleOutline" args))
(defn content-remove-circle [& args] (create-mui-icon "ContentRemoveCircle" args))
(defn content-remove [& args] (create-mui-icon "ContentRemove" args))
(defn content-reply-all [& args] (create-mui-icon "ContentReplyAll" args))
(defn content-reply [& args] (create-mui-icon "ContentReply" args))
(defn content-report [& args] (create-mui-icon "ContentReport" args))
(defn content-save [& args] (create-mui-icon "ContentSave" args))
(defn content-select-all [& args] (create-mui-icon "ContentSelectAll" args))
(defn content-send [& args] (create-mui-icon "ContentSend" args))
(defn content-sort [& args] (create-mui-icon "ContentSort" args))
(defn content-text-format [& args] (create-mui-icon "ContentTextFormat" args))
(defn content-unarchive [& args] (create-mui-icon "ContentUnarchive" args))
(defn content-undo [& args] (create-mui-icon "ContentUndo" args))
(defn content-weekend [& args] (create-mui-icon "ContentWeekend" args))
(defn device-access-alarm [& args] (create-mui-icon "DeviceAccessAlarm" args))
(defn device-access-alarms [& args] (create-mui-icon "DeviceAccessAlarms" args))
(defn device-access-time [& args] (create-mui-icon "DeviceAccessTime" args))
(defn device-add-alarm [& args] (create-mui-icon "DeviceAddAlarm" args))
(defn device-airplanemode-active [& args] (create-mui-icon "DeviceAirplanemodeActive" args))
(defn device-airplanemode-inactive [& args] (create-mui-icon "DeviceAirplanemodeInactive" args))
(defn device-battery-2-0 [& args] (create-mui-icon "DeviceBattery20" args))
(defn device-battery-3-0 [& args] (create-mui-icon "DeviceBattery30" args))
(defn device-battery-5-0 [& args] (create-mui-icon "DeviceBattery50" args))
(defn device-battery-6-0 [& args] (create-mui-icon "DeviceBattery60" args))
(defn device-battery-8-0 [& args] (create-mui-icon "DeviceBattery80" args))
(defn device-battery-9-0 [& args] (create-mui-icon "DeviceBattery90" args))
(defn device-battery-alert [& args] (create-mui-icon "DeviceBatteryAlert" args))
(defn device-battery-charging-2-0 [& args] (create-mui-icon "DeviceBatteryCharging20" args))
(defn device-battery-charging-3-0 [& args] (create-mui-icon "DeviceBatteryCharging30" args))
(defn device-battery-charging-5-0 [& args] (create-mui-icon "DeviceBatteryCharging50" args))
(defn device-battery-charging-6-0 [& args] (create-mui-icon "DeviceBatteryCharging60" args))
(defn device-battery-charging-8-0 [& args] (create-mui-icon "DeviceBatteryCharging80" args))
(defn device-battery-charging-9-0 [& args] (create-mui-icon "DeviceBatteryCharging90" args))
(defn device-battery-charging-full [& args] (create-mui-icon "DeviceBatteryChargingFull" args))
(defn device-battery-full [& args] (create-mui-icon "DeviceBatteryFull" args))
(defn device-battery-std [& args] (create-mui-icon "DeviceBatteryStd" args))
(defn device-battery-unknown [& args] (create-mui-icon "DeviceBatteryUnknown" args))
(defn device-bluetooth-connected [& args] (create-mui-icon "DeviceBluetoothConnected" args))
(defn device-bluetooth-disabled [& args] (create-mui-icon "DeviceBluetoothDisabled" args))
(defn device-bluetooth-searching [& args] (create-mui-icon "DeviceBluetoothSearching" args))
(defn device-bluetooth [& args] (create-mui-icon "DeviceBluetooth" args))
(defn device-brightness-auto [& args] (create-mui-icon "DeviceBrightnessAuto" args))
(defn device-brightness-high [& args] (create-mui-icon "DeviceBrightnessHigh" args))
(defn device-brightness-low [& args] (create-mui-icon "DeviceBrightnessLow" args))
(defn device-brightness-medium [& args] (create-mui-icon "DeviceBrightnessMedium" args))
(defn device-data-usage [& args] (create-mui-icon "DeviceDataUsage" args))
(defn device-developer-mode [& args] (create-mui-icon "DeviceDeveloperMode" args))
(defn device-devices [& args] (create-mui-icon "DeviceDevices" args))
(defn device-dvr [& args] (create-mui-icon "DeviceDvr" args))
(defn device-gps-fixed [& args] (create-mui-icon "DeviceGpsFixed" args))
(defn device-gps-not-fixed [& args] (create-mui-icon "DeviceGpsNotFixed" args))
(defn device-gps-off [& args] (create-mui-icon "DeviceGpsOff" args))
(defn device-graphic-eq [& args] (create-mui-icon "DeviceGraphicEq" args))
(defn device-location-disabled [& args] (create-mui-icon "DeviceLocationDisabled" args))
(defn device-location-searching [& args] (create-mui-icon "DeviceLocationSearching" args))
(defn device-network-cell [& args] (create-mui-icon "DeviceNetworkCell" args))
(defn device-network-wifi [& args] (create-mui-icon "DeviceNetworkWifi" args))
(defn device-nfc [& args] (create-mui-icon "DeviceNfc" args))
(defn device-screen-lock-landscape [& args] (create-mui-icon "DeviceScreenLockLandscape" args))
(defn device-screen-lock-portrait [& args] (create-mui-icon "DeviceScreenLockPortrait" args))
(defn device-screen-lock-rotation [& args] (create-mui-icon "DeviceScreenLockRotation" args))
(defn device-screen-rotation [& args] (create-mui-icon "DeviceScreenRotation" args))
(defn device-sd-storage [& args] (create-mui-icon "DeviceSdStorage" args))
(defn device-settings-system-daydream [& args] (create-mui-icon "DeviceSettingsSystemDaydream" args))
(defn device-signal-cellular-0-bar [& args] (create-mui-icon "DeviceSignalCellular0Bar" args))
(defn device-signal-cellular-1-bar [& args] (create-mui-icon "DeviceSignalCellular1Bar" args))
(defn device-signal-cellular-2-bar [& args] (create-mui-icon "DeviceSignalCellular2Bar" args))
(defn device-signal-cellular-3-bar [& args] (create-mui-icon "DeviceSignalCellular3Bar" args))
(defn device-signal-cellular-4-bar [& args] (create-mui-icon "DeviceSignalCellular4Bar" args))
(defn
  device-signal-cellular-connected-no-internet-0-bar
  [& args]
  (create-mui-icon "DeviceSignalCellularConnectedNoInternet0Bar" args))
(defn
  device-signal-cellular-connected-no-internet-1-bar
  [& args]
  (create-mui-icon "DeviceSignalCellularConnectedNoInternet1Bar" args))
(defn
  device-signal-cellular-connected-no-internet-2-bar
  [& args]
  (create-mui-icon "DeviceSignalCellularConnectedNoInternet2Bar" args))
(defn
  device-signal-cellular-connected-no-internet-3-bar
  [& args]
  (create-mui-icon "DeviceSignalCellularConnectedNoInternet3Bar" args))
(defn
  device-signal-cellular-connected-no-internet-4-bar
  [& args]
  (create-mui-icon "DeviceSignalCellularConnectedNoInternet4Bar" args))
(defn device-signal-cellular-no-sim [& args] (create-mui-icon "DeviceSignalCellularNoSim" args))
(defn device-signal-cellular-null [& args] (create-mui-icon "DeviceSignalCellularNull" args))
(defn device-signal-cellular-off [& args] (create-mui-icon "DeviceSignalCellularOff" args))
(defn device-signal-wifi-0-bar [& args] (create-mui-icon "DeviceSignalWifi0Bar" args))
(defn device-signal-wifi-1-bar-lock [& args] (create-mui-icon "DeviceSignalWifi1BarLock" args))
(defn device-signal-wifi-1-bar [& args] (create-mui-icon "DeviceSignalWifi1Bar" args))
(defn device-signal-wifi-2-bar-lock [& args] (create-mui-icon "DeviceSignalWifi2BarLock" args))
(defn device-signal-wifi-2-bar [& args] (create-mui-icon "DeviceSignalWifi2Bar" args))
(defn device-signal-wifi-3-bar-lock [& args] (create-mui-icon "DeviceSignalWifi3BarLock" args))
(defn device-signal-wifi-3-bar [& args] (create-mui-icon "DeviceSignalWifi3Bar" args))
(defn device-signal-wifi-4-bar-lock [& args] (create-mui-icon "DeviceSignalWifi4BarLock" args))
(defn device-signal-wifi-4-bar [& args] (create-mui-icon "DeviceSignalWifi4Bar" args))
(defn device-signal-wifi-off [& args] (create-mui-icon "DeviceSignalWifiOff" args))
(defn device-storage [& args] (create-mui-icon "DeviceStorage" args))
(defn device-usb [& args] (create-mui-icon "DeviceUsb" args))
(defn device-wallpaper [& args] (create-mui-icon "DeviceWallpaper" args))
(defn device-widgets [& args] (create-mui-icon "DeviceWidgets" args))
(defn device-wifi-lock [& args] (create-mui-icon "DeviceWifiLock" args))
(defn device-wifi-tethering [& args] (create-mui-icon "DeviceWifiTethering" args))
(defn editor-attach-file [& args] (create-mui-icon "EditorAttachFile" args))
(defn editor-attach-money [& args] (create-mui-icon "EditorAttachMoney" args))
(defn editor-border-all [& args] (create-mui-icon "EditorBorderAll" args))
(defn editor-border-bottom [& args] (create-mui-icon "EditorBorderBottom" args))
(defn editor-border-clear [& args] (create-mui-icon "EditorBorderClear" args))
(defn editor-border-color [& args] (create-mui-icon "EditorBorderColor" args))
(defn editor-border-horizontal [& args] (create-mui-icon "EditorBorderHorizontal" args))
(defn editor-border-inner [& args] (create-mui-icon "EditorBorderInner" args))
(defn editor-border-left [& args] (create-mui-icon "EditorBorderLeft" args))
(defn editor-border-outer [& args] (create-mui-icon "EditorBorderOuter" args))
(defn editor-border-right [& args] (create-mui-icon "EditorBorderRight" args))
(defn editor-border-style [& args] (create-mui-icon "EditorBorderStyle" args))
(defn editor-border-top [& args] (create-mui-icon "EditorBorderTop" args))
(defn editor-border-vertical [& args] (create-mui-icon "EditorBorderVertical" args))
(defn editor-bubble-chart [& args] (create-mui-icon "EditorBubbleChart" args))
(defn editor-drag-handle [& args] (create-mui-icon "EditorDragHandle" args))
(defn editor-format-align-center [& args] (create-mui-icon "EditorFormatAlignCenter" args))
(defn editor-format-align-justify [& args] (create-mui-icon "EditorFormatAlignJustify" args))
(defn editor-format-align-left [& args] (create-mui-icon "EditorFormatAlignLeft" args))
(defn editor-format-align-right [& args] (create-mui-icon "EditorFormatAlignRight" args))
(defn editor-format-bold [& args] (create-mui-icon "EditorFormatBold" args))
(defn editor-format-clear [& args] (create-mui-icon "EditorFormatClear" args))
(defn editor-format-color-fill [& args] (create-mui-icon "EditorFormatColorFill" args))
(defn editor-format-color-reset [& args] (create-mui-icon "EditorFormatColorReset" args))
(defn editor-format-color-text [& args] (create-mui-icon "EditorFormatColorText" args))
(defn editor-format-indent-decrease [& args] (create-mui-icon "EditorFormatIndentDecrease" args))
(defn editor-format-indent-increase [& args] (create-mui-icon "EditorFormatIndentIncrease" args))
(defn editor-format-italic [& args] (create-mui-icon "EditorFormatItalic" args))
(defn editor-format-line-spacing [& args] (create-mui-icon "EditorFormatLineSpacing" args))
(defn editor-format-list-bulleted [& args] (create-mui-icon "EditorFormatListBulleted" args))
(defn editor-format-list-numbered [& args] (create-mui-icon "EditorFormatListNumbered" args))
(defn editor-format-paint [& args] (create-mui-icon "EditorFormatPaint" args))
(defn editor-format-quote [& args] (create-mui-icon "EditorFormatQuote" args))
(defn editor-format-shapes [& args] (create-mui-icon "EditorFormatShapes" args))
(defn editor-format-size [& args] (create-mui-icon "EditorFormatSize" args))
(defn editor-format-strikethrough [& args] (create-mui-icon "EditorFormatStrikethrough" args))
(defn editor-format-textdirection-l-to-r [& args] (create-mui-icon "EditorFormatTextdirectionLToR" args))
(defn editor-format-textdirection-r-to-l [& args] (create-mui-icon "EditorFormatTextdirectionRToL" args))
(defn editor-format-underlined [& args] (create-mui-icon "EditorFormatUnderlined" args))
(defn editor-functions [& args] (create-mui-icon "EditorFunctions" args))
(defn editor-highlight [& args] (create-mui-icon "EditorHighlight" args))
(defn editor-insert-chart [& args] (create-mui-icon "EditorInsertChart" args))
(defn editor-insert-comment [& args] (create-mui-icon "EditorInsertComment" args))
(defn editor-insert-drive-file [& args] (create-mui-icon "EditorInsertDriveFile" args))
(defn editor-insert-emoticon [& args] (create-mui-icon "EditorInsertEmoticon" args))
(defn editor-insert-invitation [& args] (create-mui-icon "EditorInsertInvitation" args))
(defn editor-insert-link [& args] (create-mui-icon "EditorInsertLink" args))
(defn editor-insert-photo [& args] (create-mui-icon "EditorInsertPhoto" args))
(defn editor-linear-scale [& args] (create-mui-icon "EditorLinearScale" args))
(defn editor-merge-type [& args] (create-mui-icon "EditorMergeType" args))
(defn editor-mode-comment [& args] (create-mui-icon "EditorModeComment" args))
(defn editor-mode-edit [& args] (create-mui-icon "EditorModeEdit" args))
(defn editor-monetization-on [& args] (create-mui-icon "EditorMonetizationOn" args))
(defn editor-money-off [& args] (create-mui-icon "EditorMoneyOff" args))
(defn editor-multiline-chart [& args] (create-mui-icon "EditorMultilineChart" args))
(defn editor-pie-chart-outlined [& args] (create-mui-icon "EditorPieChartOutlined" args))
(defn editor-pie-chart [& args] (create-mui-icon "EditorPieChart" args))
(defn editor-publish [& args] (create-mui-icon "EditorPublish" args))
(defn editor-short-text [& args] (create-mui-icon "EditorShortText" args))
(defn editor-show-chart [& args] (create-mui-icon "EditorShowChart" args))
(defn editor-space-bar [& args] (create-mui-icon "EditorSpaceBar" args))
(defn editor-strikethrough-s [& args] (create-mui-icon "EditorStrikethroughS" args))
(defn editor-text-fields [& args] (create-mui-icon "EditorTextFields" args))
(defn editor-title [& args] (create-mui-icon "EditorTitle" args))
(defn editor-vertical-align-bottom [& args] (create-mui-icon "EditorVerticalAlignBottom" args))
(defn editor-vertical-align-center [& args] (create-mui-icon "EditorVerticalAlignCenter" args))
(defn editor-vertical-align-top [& args] (create-mui-icon "EditorVerticalAlignTop" args))
(defn editor-wrap-text [& args] (create-mui-icon "EditorWrapText" args))
(defn file-attachment [& args] (create-mui-icon "FileAttachment" args))
(defn file-cloud-circle [& args] (create-mui-icon "FileCloudCircle" args))
(defn file-cloud-done [& args] (create-mui-icon "FileCloudDone" args))
(defn file-cloud-download [& args] (create-mui-icon "FileCloudDownload" args))
(defn file-cloud-off [& args] (create-mui-icon "FileCloudOff" args))
(defn file-cloud-queue [& args] (create-mui-icon "FileCloudQueue" args))
(defn file-cloud-upload [& args] (create-mui-icon "FileCloudUpload" args))
(defn file-cloud [& args] (create-mui-icon "FileCloud" args))
(defn file-create-new-folder [& args] (create-mui-icon "FileCreateNewFolder" args))
(defn file-file-download [& args] (create-mui-icon "FileFileDownload" args))
(defn file-file-upload [& args] (create-mui-icon "FileFileUpload" args))
(defn file-folder-open [& args] (create-mui-icon "FileFolderOpen" args))
(defn file-folder-shared [& args] (create-mui-icon "FileFolderShared" args))
(defn file-folder [& args] (create-mui-icon "FileFolder" args))
(defn hardware-cast-connected [& args] (create-mui-icon "HardwareCastConnected" args))
(defn hardware-cast [& args] (create-mui-icon "HardwareCast" args))
(defn hardware-computer [& args] (create-mui-icon "HardwareComputer" args))
(defn hardware-desktop-mac [& args] (create-mui-icon "HardwareDesktopMac" args))
(defn hardware-desktop-windows [& args] (create-mui-icon "HardwareDesktopWindows" args))
(defn hardware-developer-board [& args] (create-mui-icon "HardwareDeveloperBoard" args))
(defn hardware-device-hub [& args] (create-mui-icon "HardwareDeviceHub" args))
(defn hardware-devices-other [& args] (create-mui-icon "HardwareDevicesOther" args))
(defn hardware-dock [& args] (create-mui-icon "HardwareDock" args))
(defn hardware-gamepad [& args] (create-mui-icon "HardwareGamepad" args))
(defn hardware-headset-mic [& args] (create-mui-icon "HardwareHeadsetMic" args))
(defn hardware-headset [& args] (create-mui-icon "HardwareHeadset" args))
(defn hardware-keyboard-arrow-down [& args] (create-mui-icon "HardwareKeyboardArrowDown" args))
(defn hardware-keyboard-arrow-left [& args] (create-mui-icon "HardwareKeyboardArrowLeft" args))
(defn hardware-keyboard-arrow-right [& args] (create-mui-icon "HardwareKeyboardArrowRight" args))
(defn hardware-keyboard-arrow-up [& args] (create-mui-icon "HardwareKeyboardArrowUp" args))
(defn hardware-keyboard-backspace [& args] (create-mui-icon "HardwareKeyboardBackspace" args))
(defn hardware-keyboard-capslock [& args] (create-mui-icon "HardwareKeyboardCapslock" args))
(defn hardware-keyboard-hide [& args] (create-mui-icon "HardwareKeyboardHide" args))
(defn hardware-keyboard-return [& args] (create-mui-icon "HardwareKeyboardReturn" args))
(defn hardware-keyboard-tab [& args] (create-mui-icon "HardwareKeyboardTab" args))
(defn hardware-keyboard-voice [& args] (create-mui-icon "HardwareKeyboardVoice" args))
(defn hardware-keyboard [& args] (create-mui-icon "HardwareKeyboard" args))
(defn hardware-laptop-chromebook [& args] (create-mui-icon "HardwareLaptopChromebook" args))
(defn hardware-laptop-mac [& args] (create-mui-icon "HardwareLaptopMac" args))
(defn hardware-laptop-windows [& args] (create-mui-icon "HardwareLaptopWindows" args))
(defn hardware-laptop [& args] (create-mui-icon "HardwareLaptop" args))
(defn hardware-memory [& args] (create-mui-icon "HardwareMemory" args))
(defn hardware-mouse [& args] (create-mui-icon "HardwareMouse" args))
(defn hardware-phone-android [& args] (create-mui-icon "HardwarePhoneAndroid" args))
(defn hardware-phone-iphone [& args] (create-mui-icon "HardwarePhoneIphone" args))
(defn hardware-phonelink-off [& args] (create-mui-icon "HardwarePhonelinkOff" args))
(defn hardware-phonelink [& args] (create-mui-icon "HardwarePhonelink" args))
(defn hardware-power-input [& args] (create-mui-icon "HardwarePowerInput" args))
(defn hardware-router [& args] (create-mui-icon "HardwareRouter" args))
(defn hardware-scanner [& args] (create-mui-icon "HardwareScanner" args))
(defn hardware-security [& args] (create-mui-icon "HardwareSecurity" args))
(defn hardware-sim-card [& args] (create-mui-icon "HardwareSimCard" args))
(defn hardware-smartphone [& args] (create-mui-icon "HardwareSmartphone" args))
(defn hardware-speaker-group [& args] (create-mui-icon "HardwareSpeakerGroup" args))
(defn hardware-speaker [& args] (create-mui-icon "HardwareSpeaker" args))
(defn hardware-tablet-android [& args] (create-mui-icon "HardwareTabletAndroid" args))
(defn hardware-tablet-mac [& args] (create-mui-icon "HardwareTabletMac" args))
(defn hardware-tablet [& args] (create-mui-icon "HardwareTablet" args))
(defn hardware-toys [& args] (create-mui-icon "HardwareToys" args))
(defn hardware-tv [& args] (create-mui-icon "HardwareTv" args))
(defn hardware-videogame-asset [& args] (create-mui-icon "HardwareVideogameAsset" args))
(defn hardware-watch [& args] (create-mui-icon "HardwareWatch" args))
(defn image-add-a-photo [& args] (create-mui-icon "ImageAddAPhoto" args))
(defn image-add-to-photos [& args] (create-mui-icon "ImageAddToPhotos" args))
(defn image-adjust [& args] (create-mui-icon "ImageAdjust" args))
(defn image-assistant-photo [& args] (create-mui-icon "ImageAssistantPhoto" args))
(defn image-assistant [& args] (create-mui-icon "ImageAssistant" args))
(defn image-audiotrack [& args] (create-mui-icon "ImageAudiotrack" args))
(defn image-blur-circular [& args] (create-mui-icon "ImageBlurCircular" args))
(defn image-blur-linear [& args] (create-mui-icon "ImageBlurLinear" args))
(defn image-blur-off [& args] (create-mui-icon "ImageBlurOff" args))
(defn image-blur-on [& args] (create-mui-icon "ImageBlurOn" args))
(defn image-brightness-1 [& args] (create-mui-icon "ImageBrightness1" args))
(defn image-brightness-2 [& args] (create-mui-icon "ImageBrightness2" args))
(defn image-brightness-3 [& args] (create-mui-icon "ImageBrightness3" args))
(defn image-brightness-4 [& args] (create-mui-icon "ImageBrightness4" args))
(defn image-brightness-5 [& args] (create-mui-icon "ImageBrightness5" args))
(defn image-brightness-6 [& args] (create-mui-icon "ImageBrightness6" args))
(defn image-brightness-7 [& args] (create-mui-icon "ImageBrightness7" args))
(defn image-broken-image [& args] (create-mui-icon "ImageBrokenImage" args))
(defn image-brush [& args] (create-mui-icon "ImageBrush" args))
(defn image-burst-mode [& args] (create-mui-icon "ImageBurstMode" args))
(defn image-camera-alt [& args] (create-mui-icon "ImageCameraAlt" args))
(defn image-camera-front [& args] (create-mui-icon "ImageCameraFront" args))
(defn image-camera-rear [& args] (create-mui-icon "ImageCameraRear" args))
(defn image-camera-roll [& args] (create-mui-icon "ImageCameraRoll" args))
(defn image-camera [& args] (create-mui-icon "ImageCamera" args))
(defn image-center-focus-strong [& args] (create-mui-icon "ImageCenterFocusStrong" args))
(defn image-center-focus-weak [& args] (create-mui-icon "ImageCenterFocusWeak" args))
(defn image-collections-bookmark [& args] (create-mui-icon "ImageCollectionsBookmark" args))
(defn image-collections [& args] (create-mui-icon "ImageCollections" args))
(defn image-color-lens [& args] (create-mui-icon "ImageColorLens" args))
(defn image-colorize [& args] (create-mui-icon "ImageColorize" args))
(defn image-compare [& args] (create-mui-icon "ImageCompare" args))
(defn image-control-point-duplicate [& args] (create-mui-icon "ImageControlPointDuplicate" args))
(defn image-control-point [& args] (create-mui-icon "ImageControlPoint" args))
(defn image-crop-1-6-9 [& args] (create-mui-icon "ImageCrop169" args))
(defn image-crop-3-2 [& args] (create-mui-icon "ImageCrop32" args))
(defn image-crop-5-4 [& args] (create-mui-icon "ImageCrop54" args))
(defn image-crop-7-5 [& args] (create-mui-icon "ImageCrop75" args))
(defn image-crop-din [& args] (create-mui-icon "ImageCropDin" args))
(defn image-crop-free [& args] (create-mui-icon "ImageCropFree" args))
(defn image-crop-landscape [& args] (create-mui-icon "ImageCropLandscape" args))
(defn image-crop-original [& args] (create-mui-icon "ImageCropOriginal" args))
(defn image-crop-portrait [& args] (create-mui-icon "ImageCropPortrait" args))
(defn image-crop-rotate [& args] (create-mui-icon "ImageCropRotate" args))
(defn image-crop-square [& args] (create-mui-icon "ImageCropSquare" args))
(defn image-crop [& args] (create-mui-icon "ImageCrop" args))
(defn image-dehaze [& args] (create-mui-icon "ImageDehaze" args))
(defn image-details [& args] (create-mui-icon "ImageDetails" args))
(defn image-edit [& args] (create-mui-icon "ImageEdit" args))
(defn image-exposure-neg-1 [& args] (create-mui-icon "ImageExposureNeg1" args))
(defn image-exposure-neg-2 [& args] (create-mui-icon "ImageExposureNeg2" args))
(defn image-exposure-plus-1 [& args] (create-mui-icon "ImageExposurePlus1" args))
(defn image-exposure-plus-2 [& args] (create-mui-icon "ImageExposurePlus2" args))
(defn image-exposure-zero [& args] (create-mui-icon "ImageExposureZero" args))
(defn image-exposure [& args] (create-mui-icon "ImageExposure" args))
(defn image-filter-1 [& args] (create-mui-icon "ImageFilter1" args))
(defn image-filter-2 [& args] (create-mui-icon "ImageFilter2" args))
(defn image-filter-3 [& args] (create-mui-icon "ImageFilter3" args))
(defn image-filter-4 [& args] (create-mui-icon "ImageFilter4" args))
(defn image-filter-5 [& args] (create-mui-icon "ImageFilter5" args))
(defn image-filter-6 [& args] (create-mui-icon "ImageFilter6" args))
(defn image-filter-7 [& args] (create-mui-icon "ImageFilter7" args))
(defn image-filter-8 [& args] (create-mui-icon "ImageFilter8" args))
(defn image-filter-9-plus [& args] (create-mui-icon "ImageFilter9Plus" args))
(defn image-filter-9 [& args] (create-mui-icon "ImageFilter9" args))
(defn image-filter-b-and-w [& args] (create-mui-icon "ImageFilterBAndW" args))
(defn image-filter-center-focus [& args] (create-mui-icon "ImageFilterCenterFocus" args))
(defn image-filter-drama [& args] (create-mui-icon "ImageFilterDrama" args))
(defn image-filter-frames [& args] (create-mui-icon "ImageFilterFrames" args))
(defn image-filter-hdr [& args] (create-mui-icon "ImageFilterHdr" args))
(defn image-filter-none [& args] (create-mui-icon "ImageFilterNone" args))
(defn image-filter-tilt-shift [& args] (create-mui-icon "ImageFilterTiltShift" args))
(defn image-filter-vintage [& args] (create-mui-icon "ImageFilterVintage" args))
(defn image-filter [& args] (create-mui-icon "ImageFilter" args))
(defn image-flare [& args] (create-mui-icon "ImageFlare" args))
(defn image-flash-auto [& args] (create-mui-icon "ImageFlashAuto" args))
(defn image-flash-off [& args] (create-mui-icon "ImageFlashOff" args))
(defn image-flash-on [& args] (create-mui-icon "ImageFlashOn" args))
(defn image-flip [& args] (create-mui-icon "ImageFlip" args))
(defn image-gradient [& args] (create-mui-icon "ImageGradient" args))
(defn image-grain [& args] (create-mui-icon "ImageGrain" args))
(defn image-grid-off [& args] (create-mui-icon "ImageGridOff" args))
(defn image-grid-on [& args] (create-mui-icon "ImageGridOn" args))
(defn image-hdr-off [& args] (create-mui-icon "ImageHdrOff" args))
(defn image-hdr-on [& args] (create-mui-icon "ImageHdrOn" args))
(defn image-hdr-strong [& args] (create-mui-icon "ImageHdrStrong" args))
(defn image-hdr-weak [& args] (create-mui-icon "ImageHdrWeak" args))
(defn image-healing [& args] (create-mui-icon "ImageHealing" args))
(defn image-image-aspect-ratio [& args] (create-mui-icon "ImageImageAspectRatio" args))
(defn image-image [& args] (create-mui-icon "ImageImage" args))
(defn image-iso [& args] (create-mui-icon "ImageIso" args))
(defn image-landscape [& args] (create-mui-icon "ImageLandscape" args))
(defn image-leak-add [& args] (create-mui-icon "ImageLeakAdd" args))
(defn image-leak-remove [& args] (create-mui-icon "ImageLeakRemove" args))
(defn image-lens [& args] (create-mui-icon "ImageLens" args))
(defn image-linked-camera [& args] (create-mui-icon "ImageLinkedCamera" args))
(defn image-looks-3 [& args] (create-mui-icon "ImageLooks3" args))
(defn image-looks-4 [& args] (create-mui-icon "ImageLooks4" args))
(defn image-looks-5 [& args] (create-mui-icon "ImageLooks5" args))
(defn image-looks-6 [& args] (create-mui-icon "ImageLooks6" args))
(defn image-looks-one [& args] (create-mui-icon "ImageLooksOne" args))
(defn image-looks-two [& args] (create-mui-icon "ImageLooksTwo" args))
(defn image-looks [& args] (create-mui-icon "ImageLooks" args))
(defn image-loupe [& args] (create-mui-icon "ImageLoupe" args))
(defn image-monochrome-photos [& args] (create-mui-icon "ImageMonochromePhotos" args))
(defn image-movie-creation [& args] (create-mui-icon "ImageMovieCreation" args))
(defn image-movie-filter [& args] (create-mui-icon "ImageMovieFilter" args))
(defn image-music-note [& args] (create-mui-icon "ImageMusicNote" args))
(defn image-nature-people [& args] (create-mui-icon "ImageNaturePeople" args))
(defn image-nature [& args] (create-mui-icon "ImageNature" args))
(defn image-navigate-before [& args] (create-mui-icon "ImageNavigateBefore" args))
(defn image-navigate-next [& args] (create-mui-icon "ImageNavigateNext" args))
(defn image-palette [& args] (create-mui-icon "ImagePalette" args))
(defn image-panorama-fish-eye [& args] (create-mui-icon "ImagePanoramaFishEye" args))
(defn image-panorama-horizontal [& args] (create-mui-icon "ImagePanoramaHorizontal" args))
(defn image-panorama-vertical [& args] (create-mui-icon "ImagePanoramaVertical" args))
(defn image-panorama-wide-angle [& args] (create-mui-icon "ImagePanoramaWideAngle" args))
(defn image-panorama [& args] (create-mui-icon "ImagePanorama" args))
(defn image-photo-album [& args] (create-mui-icon "ImagePhotoAlbum" args))
(defn image-photo-camera [& args] (create-mui-icon "ImagePhotoCamera" args))
(defn image-photo-filter [& args] (create-mui-icon "ImagePhotoFilter" args))
(defn image-photo-library [& args] (create-mui-icon "ImagePhotoLibrary" args))
(defn image-photo-size-select-actual [& args] (create-mui-icon "ImagePhotoSizeSelectActual" args))
(defn image-photo-size-select-large [& args] (create-mui-icon "ImagePhotoSizeSelectLarge" args))
(defn image-photo-size-select-small [& args] (create-mui-icon "ImagePhotoSizeSelectSmall" args))
(defn image-photo [& args] (create-mui-icon "ImagePhoto" args))
(defn image-picture-as-pdf [& args] (create-mui-icon "ImagePictureAsPdf" args))
(defn image-portrait [& args] (create-mui-icon "ImagePortrait" args))
(defn image-remove-red-eye [& args] (create-mui-icon "ImageRemoveRedEye" args))
(defn image-rotate-9-0-degrees-ccw [& args] (create-mui-icon "ImageRotate90DegreesCcw" args))
(defn image-rotate-left [& args] (create-mui-icon "ImageRotateLeft" args))
(defn image-rotate-right [& args] (create-mui-icon "ImageRotateRight" args))
(defn image-slideshow [& args] (create-mui-icon "ImageSlideshow" args))
(defn image-straighten [& args] (create-mui-icon "ImageStraighten" args))
(defn image-style [& args] (create-mui-icon "ImageStyle" args))
(defn image-switch-camera [& args] (create-mui-icon "ImageSwitchCamera" args))
(defn image-switch-video [& args] (create-mui-icon "ImageSwitchVideo" args))
(defn image-tag-faces [& args] (create-mui-icon "ImageTagFaces" args))
(defn image-texture [& args] (create-mui-icon "ImageTexture" args))
(defn image-timelapse [& args] (create-mui-icon "ImageTimelapse" args))
(defn image-timer-1-0 [& args] (create-mui-icon "ImageTimer10" args))
(defn image-timer-3 [& args] (create-mui-icon "ImageTimer3" args))
(defn image-timer-off [& args] (create-mui-icon "ImageTimerOff" args))
(defn image-timer [& args] (create-mui-icon "ImageTimer" args))
(defn image-tonality [& args] (create-mui-icon "ImageTonality" args))
(defn image-transform [& args] (create-mui-icon "ImageTransform" args))
(defn image-tune [& args] (create-mui-icon "ImageTune" args))
(defn image-view-comfy [& args] (create-mui-icon "ImageViewComfy" args))
(defn image-view-compact [& args] (create-mui-icon "ImageViewCompact" args))
(defn image-vignette [& args] (create-mui-icon "ImageVignette" args))
(defn image-wb-auto [& args] (create-mui-icon "ImageWbAuto" args))
(defn image-wb-cloudy [& args] (create-mui-icon "ImageWbCloudy" args))
(defn image-wb-incandescent [& args] (create-mui-icon "ImageWbIncandescent" args))
(defn image-wb-iridescent [& args] (create-mui-icon "ImageWbIridescent" args))
(defn image-wb-sunny [& args] (create-mui-icon "ImageWbSunny" args))
(defn maps-add-location [& args] (create-mui-icon "MapsAddLocation" args))
(defn maps-beenhere [& args] (create-mui-icon "MapsBeenhere" args))
(defn maps-directions-bike [& args] (create-mui-icon "MapsDirectionsBike" args))
(defn maps-directions-boat [& args] (create-mui-icon "MapsDirectionsBoat" args))
(defn maps-directions-bus [& args] (create-mui-icon "MapsDirectionsBus" args))
(defn maps-directions-car [& args] (create-mui-icon "MapsDirectionsCar" args))
(defn maps-directions-railway [& args] (create-mui-icon "MapsDirectionsRailway" args))
(defn maps-directions-run [& args] (create-mui-icon "MapsDirectionsRun" args))
(defn maps-directions-subway [& args] (create-mui-icon "MapsDirectionsSubway" args))
(defn maps-directions-transit [& args] (create-mui-icon "MapsDirectionsTransit" args))
(defn maps-directions-walk [& args] (create-mui-icon "MapsDirectionsWalk" args))
(defn maps-directions [& args] (create-mui-icon "MapsDirections" args))
(defn maps-edit-location [& args] (create-mui-icon "MapsEditLocation" args))
(defn maps-ev-station [& args] (create-mui-icon "MapsEvStation" args))
(defn maps-flight [& args] (create-mui-icon "MapsFlight" args))
(defn maps-hotel [& args] (create-mui-icon "MapsHotel" args))
(defn maps-layers-clear [& args] (create-mui-icon "MapsLayersClear" args))
(defn maps-layers [& args] (create-mui-icon "MapsLayers" args))
(defn maps-local-activity [& args] (create-mui-icon "MapsLocalActivity" args))
(defn maps-local-airport [& args] (create-mui-icon "MapsLocalAirport" args))
(defn maps-local-atm [& args] (create-mui-icon "MapsLocalAtm" args))
(defn maps-local-bar [& args] (create-mui-icon "MapsLocalBar" args))
(defn maps-local-cafe [& args] (create-mui-icon "MapsLocalCafe" args))
(defn maps-local-car-wash [& args] (create-mui-icon "MapsLocalCarWash" args))
(defn maps-local-convenience-store [& args] (create-mui-icon "MapsLocalConvenienceStore" args))
(defn maps-local-dining [& args] (create-mui-icon "MapsLocalDining" args))
(defn maps-local-drink [& args] (create-mui-icon "MapsLocalDrink" args))
(defn maps-local-florist [& args] (create-mui-icon "MapsLocalFlorist" args))
(defn maps-local-gas-station [& args] (create-mui-icon "MapsLocalGasStation" args))
(defn maps-local-grocery-store [& args] (create-mui-icon "MapsLocalGroceryStore" args))
(defn maps-local-hospital [& args] (create-mui-icon "MapsLocalHospital" args))
(defn maps-local-hotel [& args] (create-mui-icon "MapsLocalHotel" args))
(defn maps-local-laundry-service [& args] (create-mui-icon "MapsLocalLaundryService" args))
(defn maps-local-library [& args] (create-mui-icon "MapsLocalLibrary" args))
(defn maps-local-mall [& args] (create-mui-icon "MapsLocalMall" args))
(defn maps-local-movies [& args] (create-mui-icon "MapsLocalMovies" args))
(defn maps-local-offer [& args] (create-mui-icon "MapsLocalOffer" args))
(defn maps-local-parking [& args] (create-mui-icon "MapsLocalParking" args))
(defn maps-local-pharmacy [& args] (create-mui-icon "MapsLocalPharmacy" args))
(defn maps-local-phone [& args] (create-mui-icon "MapsLocalPhone" args))
(defn maps-local-pizza [& args] (create-mui-icon "MapsLocalPizza" args))
(defn maps-local-play [& args] (create-mui-icon "MapsLocalPlay" args))
(defn maps-local-post-office [& args] (create-mui-icon "MapsLocalPostOffice" args))
(defn maps-local-printshop [& args] (create-mui-icon "MapsLocalPrintshop" args))
(defn maps-local-see [& args] (create-mui-icon "MapsLocalSee" args))
(defn maps-local-shipping [& args] (create-mui-icon "MapsLocalShipping" args))
(defn maps-local-taxi [& args] (create-mui-icon "MapsLocalTaxi" args))
(defn maps-map [& args] (create-mui-icon "MapsMap" args))
(defn maps-my-location [& args] (create-mui-icon "MapsMyLocation" args))
(defn maps-navigation [& args] (create-mui-icon "MapsNavigation" args))
(defn maps-near-me [& args] (create-mui-icon "MapsNearMe" args))
(defn maps-person-pin-circle [& args] (create-mui-icon "MapsPersonPinCircle" args))
(defn maps-person-pin [& args] (create-mui-icon "MapsPersonPin" args))
(defn maps-pin-drop [& args] (create-mui-icon "MapsPinDrop" args))
(defn maps-place [& args] (create-mui-icon "MapsPlace" args))
(defn maps-rate-review [& args] (create-mui-icon "MapsRateReview" args))
(defn maps-restaurant-menu [& args] (create-mui-icon "MapsRestaurantMenu" args))
(defn maps-restaurant [& args] (create-mui-icon "MapsRestaurant" args))
(defn maps-satellite [& args] (create-mui-icon "MapsSatellite" args))
(defn maps-store-mall-directory [& args] (create-mui-icon "MapsStoreMallDirectory" args))
(defn maps-streetview [& args] (create-mui-icon "MapsStreetview" args))
(defn maps-subway [& args] (create-mui-icon "MapsSubway" args))
(defn maps-terrain [& args] (create-mui-icon "MapsTerrain" args))
(defn maps-traffic [& args] (create-mui-icon "MapsTraffic" args))
(defn maps-train [& args] (create-mui-icon "MapsTrain" args))
(defn maps-tram [& args] (create-mui-icon "MapsTram" args))
(defn maps-transfer-within-a-station [& args] (create-mui-icon "MapsTransferWithinAStation" args))
(defn maps-zoom-out-map [& args] (create-mui-icon "MapsZoomOutMap" args))
(defn navigation-apps [& args] (create-mui-icon "NavigationApps" args))
(defn navigation-arrow-back [& args] (create-mui-icon "NavigationArrowBack" args))
(defn navigation-arrow-downward [& args] (create-mui-icon "NavigationArrowDownward" args))
(defn navigation-arrow-drop-down-circle [& args] (create-mui-icon "NavigationArrowDropDownCircle" args))
(defn navigation-arrow-drop-down [& args] (create-mui-icon "NavigationArrowDropDown" args))
(defn navigation-arrow-drop-up [& args] (create-mui-icon "NavigationArrowDropUp" args))
(defn navigation-arrow-forward [& args] (create-mui-icon "NavigationArrowForward" args))
(defn navigation-arrow-upward [& args] (create-mui-icon "NavigationArrowUpward" args))
(defn navigation-cancel [& args] (create-mui-icon "NavigationCancel" args))
(defn navigation-check [& args] (create-mui-icon "NavigationCheck" args))
(defn navigation-chevron-left [& args] (create-mui-icon "NavigationChevronLeft" args))
(defn navigation-chevron-right [& args] (create-mui-icon "NavigationChevronRight" args))
(defn navigation-close [& args] (create-mui-icon "NavigationClose" args))
(defn navigation-expand-less [& args] (create-mui-icon "NavigationExpandLess" args))
(defn navigation-expand-more [& args] (create-mui-icon "NavigationExpandMore" args))
(defn navigation-first-page [& args] (create-mui-icon "NavigationFirstPage" args))
(defn navigation-fullscreen-exit [& args] (create-mui-icon "NavigationFullscreenExit" args))
(defn navigation-fullscreen [& args] (create-mui-icon "NavigationFullscreen" args))
(defn navigation-last-page [& args] (create-mui-icon "NavigationLastPage" args))
(defn navigation-menu [& args] (create-mui-icon "NavigationMenu" args))
(defn navigation-more-horiz [& args] (create-mui-icon "NavigationMoreHoriz" args))
(defn navigation-more-vert [& args] (create-mui-icon "NavigationMoreVert" args))
(defn navigation-refresh [& args] (create-mui-icon "NavigationRefresh" args))
(defn navigation-subdirectory-arrow-left [& args] (create-mui-icon "NavigationSubdirectoryArrowLeft" args))
(defn navigation-subdirectory-arrow-right [& args] (create-mui-icon "NavigationSubdirectoryArrowRight" args))
(defn navigation-unfold-less [& args] (create-mui-icon "NavigationUnfoldLess" args))
(defn navigation-unfold-more [& args] (create-mui-icon "NavigationUnfoldMore" args))
(defn navigation-arrow-drop-right [& args] (create-mui-icon "NavigationArrowDropRight" args))
(defn notification-adb [& args] (create-mui-icon "NotificationAdb" args))
(defn notification-airline-seat-flat-angled [& args] (create-mui-icon "NotificationAirlineSeatFlatAngled" args))
(defn notification-airline-seat-flat [& args] (create-mui-icon "NotificationAirlineSeatFlat" args))
(defn
  notification-airline-seat-individual-suite
  [& args]
  (create-mui-icon "NotificationAirlineSeatIndividualSuite" args))
(defn notification-airline-seat-legroom-extra [& args] (create-mui-icon "NotificationAirlineSeatLegroomExtra" args))
(defn notification-airline-seat-legroom-normal [& args] (create-mui-icon "NotificationAirlineSeatLegroomNormal" args))
(defn
  notification-airline-seat-legroom-reduced
  [& args]
  (create-mui-icon "NotificationAirlineSeatLegroomReduced" args))
(defn notification-airline-seat-recline-extra [& args] (create-mui-icon "NotificationAirlineSeatReclineExtra" args))
(defn notification-airline-seat-recline-normal [& args] (create-mui-icon "NotificationAirlineSeatReclineNormal" args))
(defn notification-bluetooth-audio [& args] (create-mui-icon "NotificationBluetoothAudio" args))
(defn notification-confirmation-number [& args] (create-mui-icon "NotificationConfirmationNumber" args))
(defn notification-disc-full [& args] (create-mui-icon "NotificationDiscFull" args))
(defn notification-do-not-disturb-alt [& args] (create-mui-icon "NotificationDoNotDisturbAlt" args))
(defn notification-do-not-disturb-off [& args] (create-mui-icon "NotificationDoNotDisturbOff" args))
(defn notification-do-not-disturb-on [& args] (create-mui-icon "NotificationDoNotDisturbOn" args))
(defn notification-do-not-disturb [& args] (create-mui-icon "NotificationDoNotDisturb" args))
(defn notification-drive-eta [& args] (create-mui-icon "NotificationDriveEta" args))
(defn notification-enhanced-encryption [& args] (create-mui-icon "NotificationEnhancedEncryption" args))
(defn notification-event-available [& args] (create-mui-icon "NotificationEventAvailable" args))
(defn notification-event-busy [& args] (create-mui-icon "NotificationEventBusy" args))
(defn notification-event-note [& args] (create-mui-icon "NotificationEventNote" args))
(defn notification-folder-special [& args] (create-mui-icon "NotificationFolderSpecial" args))
(defn notification-live-tv [& args] (create-mui-icon "NotificationLiveTv" args))
(defn notification-mms [& args] (create-mui-icon "NotificationMms" args))
(defn notification-more [& args] (create-mui-icon "NotificationMore" args))
(defn notification-network-check [& args] (create-mui-icon "NotificationNetworkCheck" args))
(defn notification-network-locked [& args] (create-mui-icon "NotificationNetworkLocked" args))
(defn notification-no-encryption [& args] (create-mui-icon "NotificationNoEncryption" args))
(defn notification-ondemand-video [& args] (create-mui-icon "NotificationOndemandVideo" args))
(defn notification-personal-video [& args] (create-mui-icon "NotificationPersonalVideo" args))
(defn notification-phone-bluetooth-speaker [& args] (create-mui-icon "NotificationPhoneBluetoothSpeaker" args))
(defn notification-phone-forwarded [& args] (create-mui-icon "NotificationPhoneForwarded" args))
(defn notification-phone-in-talk [& args] (create-mui-icon "NotificationPhoneInTalk" args))
(defn notification-phone-locked [& args] (create-mui-icon "NotificationPhoneLocked" args))
(defn notification-phone-missed [& args] (create-mui-icon "NotificationPhoneMissed" args))
(defn notification-phone-paused [& args] (create-mui-icon "NotificationPhonePaused" args))
(defn notification-power [& args] (create-mui-icon "NotificationPower" args))
(defn notification-priority-high [& args] (create-mui-icon "NotificationPriorityHigh" args))
(defn notification-rv-hookup [& args] (create-mui-icon "NotificationRvHookup" args))
(defn notification-sd-card [& args] (create-mui-icon "NotificationSdCard" args))
(defn notification-sim-card-alert [& args] (create-mui-icon "NotificationSimCardAlert" args))
(defn notification-sms-failed [& args] (create-mui-icon "NotificationSmsFailed" args))
(defn notification-sms [& args] (create-mui-icon "NotificationSms" args))
(defn notification-sync-disabled [& args] (create-mui-icon "NotificationSyncDisabled" args))
(defn notification-sync-problem [& args] (create-mui-icon "NotificationSyncProblem" args))
(defn notification-sync [& args] (create-mui-icon "NotificationSync" args))
(defn notification-system-update [& args] (create-mui-icon "NotificationSystemUpdate" args))
(defn notification-tap-and-play [& args] (create-mui-icon "NotificationTapAndPlay" args))
(defn notification-time-to-leave [& args] (create-mui-icon "NotificationTimeToLeave" args))
(defn notification-vibration [& args] (create-mui-icon "NotificationVibration" args))
(defn notification-voice-chat [& args] (create-mui-icon "NotificationVoiceChat" args))
(defn notification-vpn-lock [& args] (create-mui-icon "NotificationVpnLock" args))
(defn notification-wc [& args] (create-mui-icon "NotificationWc" args))
(defn notification-wifi [& args] (create-mui-icon "NotificationWifi" args))
(defn places-ac-unit [& args] (create-mui-icon "PlacesAcUnit" args))
(defn places-airport-shuttle [& args] (create-mui-icon "PlacesAirportShuttle" args))
(defn places-all-inclusive [& args] (create-mui-icon "PlacesAllInclusive" args))
(defn places-beach-access [& args] (create-mui-icon "PlacesBeachAccess" args))
(defn places-business-center [& args] (create-mui-icon "PlacesBusinessCenter" args))
(defn places-casino [& args] (create-mui-icon "PlacesCasino" args))
(defn places-child-care [& args] (create-mui-icon "PlacesChildCare" args))
(defn places-child-friendly [& args] (create-mui-icon "PlacesChildFriendly" args))
(defn places-fitness-center [& args] (create-mui-icon "PlacesFitnessCenter" args))
(defn places-free-breakfast [& args] (create-mui-icon "PlacesFreeBreakfast" args))
(defn places-golf-course [& args] (create-mui-icon "PlacesGolfCourse" args))
(defn places-hot-tub [& args] (create-mui-icon "PlacesHotTub" args))
(defn places-kitchen [& args] (create-mui-icon "PlacesKitchen" args))
(defn places-pool [& args] (create-mui-icon "PlacesPool" args))
(defn places-room-service [& args] (create-mui-icon "PlacesRoomService" args))
(defn places-rv-hookup [& args] (create-mui-icon "PlacesRvHookup" args))
(defn places-smoke-free [& args] (create-mui-icon "PlacesSmokeFree" args))
(defn places-smoking-rooms [& args] (create-mui-icon "PlacesSmokingRooms" args))
(defn places-spa [& args] (create-mui-icon "PlacesSpa" args))
(defn social-cake [& args] (create-mui-icon "SocialCake" args))
(defn social-domain [& args] (create-mui-icon "SocialDomain" args))
(defn social-group-add [& args] (create-mui-icon "SocialGroupAdd" args))
(defn social-group [& args] (create-mui-icon "SocialGroup" args))
(defn social-location-city [& args] (create-mui-icon "SocialLocationCity" args))
(defn social-mood-bad [& args] (create-mui-icon "SocialMoodBad" args))
(defn social-mood [& args] (create-mui-icon "SocialMood" args))
(defn social-notifications-active [& args] (create-mui-icon "SocialNotificationsActive" args))
(defn social-notifications-none [& args] (create-mui-icon "SocialNotificationsNone" args))
(defn social-notifications-off [& args] (create-mui-icon "SocialNotificationsOff" args))
(defn social-notifications-paused [& args] (create-mui-icon "SocialNotificationsPaused" args))
(defn social-notifications [& args] (create-mui-icon "SocialNotifications" args))
(defn social-pages [& args] (create-mui-icon "SocialPages" args))
(defn social-party-mode [& args] (create-mui-icon "SocialPartyMode" args))
(defn social-people-outline [& args] (create-mui-icon "SocialPeopleOutline" args))
(defn social-people [& args] (create-mui-icon "SocialPeople" args))
(defn social-person-add [& args] (create-mui-icon "SocialPersonAdd" args))
(defn social-person-outline [& args] (create-mui-icon "SocialPersonOutline" args))
(defn social-person [& args] (create-mui-icon "SocialPerson" args))
(defn social-plus-one [& args] (create-mui-icon "SocialPlusOne" args))
(defn social-poll [& args] (create-mui-icon "SocialPoll" args))
(defn social-public [& args] (create-mui-icon "SocialPublic" args))
(defn social-school [& args] (create-mui-icon "SocialSchool" args))
(defn social-sentiment-dissatisfied [& args] (create-mui-icon "SocialSentimentDissatisfied" args))
(defn social-sentiment-neutral [& args] (create-mui-icon "SocialSentimentNeutral" args))
(defn social-sentiment-satisfied [& args] (create-mui-icon "SocialSentimentSatisfied" args))
(defn social-sentiment-very-dissatisfied [& args] (create-mui-icon "SocialSentimentVeryDissatisfied" args))
(defn social-sentiment-very-satisfied [& args] (create-mui-icon "SocialSentimentVerySatisfied" args))
(defn social-share [& args] (create-mui-icon "SocialShare" args))
(defn social-whatshot [& args] (create-mui-icon "SocialWhatshot" args))
(defn toggle-check-box-outline-blank [& args] (create-mui-icon "ToggleCheckBoxOutlineBlank" args))
(defn toggle-check-box [& args] (create-mui-icon "ToggleCheckBox" args))
(defn toggle-indeterminate-check-box [& args] (create-mui-icon "ToggleIndeterminateCheckBox" args))
(defn toggle-radio-button-checked [& args] (create-mui-icon "ToggleRadioButtonChecked" args))
(defn toggle-radio-button-unchecked [& args] (create-mui-icon "ToggleRadioButtonUnchecked" args))
(defn toggle-star-border [& args] (create-mui-icon "ToggleStarBorder" args))
(defn toggle-star-half [& args] (create-mui-icon "ToggleStarHalf" args))
(defn toggle-star [& args] (create-mui-icon "ToggleStar" args))
